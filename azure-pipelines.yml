variables:
  project_name: 'EnvironmentApi'
  netcore_version: '2.2'
  relative_path_publish: 'bin/Release/netcoreapp'
  relative_path_copy: '/bin/Release/netcoreapp'

jobs:
- job: Build
  steps:
  - script: |
      pwd && ls -la
      dotnet restore
      dotnet publish -c Release -o $(relative_path_publish)$(netcore_version)
      mkdir artifact
      cp -r $(project_name)/$(relative_path_copy)$(netcore_version) artifact/$(Build.SourceBranchName)
    displayName: Build Application
  - task: PublishPipelineArtifact@1
    displayName: Store Application Artifact
    inputs:
      path: $(System.DefaultWorkingDirectory)/artifact
      artifact: $(project_name)

- job: UnitTests
  dependsOn: Build
  steps:
    - script: |
        dotnet tool install --global coverlet.console 
        dotnet add $(project_name).Tests/$(project_name).Tests.csproj package coverlet.msbuild
        dotnet add $(project_name).Tests/$(project_name).Tests.csproj package XunitXml.TestLogger
        dotnet test /p:CollectCoverage=true \
                  /p:CoverletOutputFormat=\"opencover,cobertura\" \
                  /p:CoverletOutput=results/result \
                  /p:Exclude=[xunit.*]* $(project_name).sln \
                  --test-adapter-path:. --logger:"xunit;LogFilePath=results/result.xunit.xml"
      displayName: Running Unit Tests
    - task: PublishPipelineArtifact@1
      displayName: Store Test Result
      inputs:
        path: $(System.DefaultWorkingDirectory)/$(project_name).Tests/results
        artifact: UnitTestResults